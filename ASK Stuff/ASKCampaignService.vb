'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1433
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.50727.42.
'

Namespace ASKWebServices
'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Web.Services.WebServiceBindingAttribute(Name:="CampaignsCampaignsBinding", [Namespace]:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
Partial Public Class CampaignsService
    Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
    
    Private SetGeoTargetingOperationCompleted As System.Threading.SendOrPostCallback
    
    Private UpdateCampaignOperationCompleted As System.Threading.SendOrPostCallback
    
    Private UpdateCampaignMaxCpcsOperationCompleted As System.Threading.SendOrPostCallback
    
    Private AddCampaignOperationCompleted As System.Threading.SendOrPostCallback
    
    Private UpdateCampaignsOperationCompleted As System.Threading.SendOrPostCallback
    
    Private GetCampaignOperationCompleted As System.Threading.SendOrPostCallback
    
    Private UpdateCampaignStateOperationCompleted As System.Threading.SendOrPostCallback
    
    Private GetCampaignListOperationCompleted As System.Threading.SendOrPostCallback
    
    Private UpdateCampaignBudgetOperationCompleted As System.Threading.SendOrPostCallback
    
    Private UpdateCampaignStatesOperationCompleted As System.Threading.SendOrPostCallback
    
    Private AddCampaignsOperationCompleted As System.Threading.SendOrPostCallback
    
    Private GetGeoTargetingOperationCompleted As System.Threading.SendOrPostCallback
    
    Private UpdateCampaignBudgetsOperationCompleted As System.Threading.SendOrPostCallback
    
    Private GetAllCampaignsOperationCompleted As System.Threading.SendOrPostCallback
    
    Private UpdateCampaignMaxCpcOperationCompleted As System.Threading.SendOrPostCallback
    
    '''<remarks/>
    Public Sub New()
        MyBase.New
        Me.Url = "https://api-secure.sponsoredlistings.ask.com/api/v3/campaigns/api"
    End Sub
    
    '''<remarks/>
    Public Event SetGeoTargetingCompleted As SetGeoTargetingCompletedEventHandler
    
    '''<remarks/>
    Public Event UpdateCampaignCompleted As UpdateCampaignCompletedEventHandler
    
    '''<remarks/>
    Public Event UpdateCampaignMaxCpcsCompleted As UpdateCampaignMaxCpcsCompletedEventHandler
    
    '''<remarks/>
    Public Event AddCampaignCompleted As AddCampaignCompletedEventHandler
    
    '''<remarks/>
    Public Event UpdateCampaignsCompleted As UpdateCampaignsCompletedEventHandler
    
    '''<remarks/>
    Public Event GetCampaignCompleted As GetCampaignCompletedEventHandler
    
    '''<remarks/>
    Public Event UpdateCampaignStateCompleted As UpdateCampaignStateCompletedEventHandler
    
    '''<remarks/>
    Public Event GetCampaignListCompleted As GetCampaignListCompletedEventHandler
    
    '''<remarks/>
    Public Event UpdateCampaignBudgetCompleted As UpdateCampaignBudgetCompletedEventHandler
    
    '''<remarks/>
    Public Event UpdateCampaignStatesCompleted As UpdateCampaignStatesCompletedEventHandler
    
    '''<remarks/>
    Public Event AddCampaignsCompleted As AddCampaignsCompletedEventHandler
    
    '''<remarks/>
    Public Event GetGeoTargetingCompleted As GetGeoTargetingCompletedEventHandler
    
    '''<remarks/>
    Public Event UpdateCampaignBudgetsCompleted As UpdateCampaignBudgetsCompletedEventHandler
    
    '''<remarks/>
    Public Event GetAllCampaignsCompleted As GetAllCampaignsCompletedEventHandler
    
    '''<remarks/>
    Public Event UpdateCampaignMaxCpcCompleted As UpdateCampaignMaxCpcCompletedEventHandler
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/SetGeoTargeting", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function SetGeoTargeting(ByVal token As String, ByVal campaign_id As Integer, ByVal geostruct As GeoStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> GeoStruct
        Dim results() As Object = Me.Invoke("SetGeoTargeting", New Object() {token, campaign_id, geostruct})
        Return CType(results(0),GeoStruct)
    End Function
    
    '''<remarks/>
    Public Function BeginSetGeoTargeting(ByVal token As String, ByVal campaign_id As Integer, ByVal geostruct As GeoStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("SetGeoTargeting", New Object() {token, campaign_id, geostruct}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndSetGeoTargeting(ByVal asyncResult As System.IAsyncResult) As GeoStruct
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),GeoStruct)
    End Function
    
    '''<remarks/>
    Public Overloads Sub SetGeoTargetingAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal geostruct As GeoStruct)
        Me.SetGeoTargetingAsync(token, campaign_id, geostruct, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub SetGeoTargetingAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal geostruct As GeoStruct, ByVal userState As Object)
        If (Me.SetGeoTargetingOperationCompleted Is Nothing) Then
            Me.SetGeoTargetingOperationCompleted = AddressOf Me.OnSetGeoTargetingOperationCompleted
        End If
        Me.InvokeAsync("SetGeoTargeting", New Object() {token, campaign_id, geostruct}, Me.SetGeoTargetingOperationCompleted, userState)
    End Sub
    
    Private Sub OnSetGeoTargetingOperationCompleted(ByVal arg As Object)
        If (Not (Me.SetGeoTargetingCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent SetGeoTargetingCompleted(Me, New SetGeoTargetingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/UpdateCampaign", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function UpdateCampaign(ByVal token As String, ByVal campaign As CampaignStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct
        Dim results() As Object = Me.Invoke("UpdateCampaign", New Object() {token, campaign})
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Function BeginUpdateCampaign(ByVal token As String, ByVal campaign As CampaignStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("UpdateCampaign", New Object() {token, campaign}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndUpdateCampaign(ByVal asyncResult As System.IAsyncResult) As CampaignStruct
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignAsync(ByVal token As String, ByVal campaign As CampaignStruct)
        Me.UpdateCampaignAsync(token, campaign, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignAsync(ByVal token As String, ByVal campaign As CampaignStruct, ByVal userState As Object)
        If (Me.UpdateCampaignOperationCompleted Is Nothing) Then
            Me.UpdateCampaignOperationCompleted = AddressOf Me.OnUpdateCampaignOperationCompleted
        End If
        Me.InvokeAsync("UpdateCampaign", New Object() {token, campaign}, Me.UpdateCampaignOperationCompleted, userState)
    End Sub
    
    Private Sub OnUpdateCampaignOperationCompleted(ByVal arg As Object)
        If (Not (Me.UpdateCampaignCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent UpdateCampaignCompleted(Me, New UpdateCampaignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/UpdateCampaignMaxCpcs", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function UpdateCampaignMaxCpcs(ByVal token As String, ByVal campaigns() As CampaignStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct()
        Dim results() As Object = Me.Invoke("UpdateCampaignMaxCpcs", New Object() {token, campaigns})
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Function BeginUpdateCampaignMaxCpcs(ByVal token As String, ByVal campaigns() As CampaignStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("UpdateCampaignMaxCpcs", New Object() {token, campaigns}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndUpdateCampaignMaxCpcs(ByVal asyncResult As System.IAsyncResult) As CampaignStruct()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignMaxCpcsAsync(ByVal token As String, ByVal campaigns() As CampaignStruct)
        Me.UpdateCampaignMaxCpcsAsync(token, campaigns, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignMaxCpcsAsync(ByVal token As String, ByVal campaigns() As CampaignStruct, ByVal userState As Object)
        If (Me.UpdateCampaignMaxCpcsOperationCompleted Is Nothing) Then
            Me.UpdateCampaignMaxCpcsOperationCompleted = AddressOf Me.OnUpdateCampaignMaxCpcsOperationCompleted
        End If
        Me.InvokeAsync("UpdateCampaignMaxCpcs", New Object() {token, campaigns}, Me.UpdateCampaignMaxCpcsOperationCompleted, userState)
    End Sub
    
    Private Sub OnUpdateCampaignMaxCpcsOperationCompleted(ByVal arg As Object)
        If (Not (Me.UpdateCampaignMaxCpcsCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent UpdateCampaignMaxCpcsCompleted(Me, New UpdateCampaignMaxCpcsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/AddCampaign", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function AddCampaign(ByVal token As String, ByVal campaign As CampaignStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct
        Dim results() As Object = Me.Invoke("AddCampaign", New Object() {token, campaign})
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Function BeginAddCampaign(ByVal token As String, ByVal campaign As CampaignStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("AddCampaign", New Object() {token, campaign}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndAddCampaign(ByVal asyncResult As System.IAsyncResult) As CampaignStruct
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Overloads Sub AddCampaignAsync(ByVal token As String, ByVal campaign As CampaignStruct)
        Me.AddCampaignAsync(token, campaign, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub AddCampaignAsync(ByVal token As String, ByVal campaign As CampaignStruct, ByVal userState As Object)
        If (Me.AddCampaignOperationCompleted Is Nothing) Then
            Me.AddCampaignOperationCompleted = AddressOf Me.OnAddCampaignOperationCompleted
        End If
        Me.InvokeAsync("AddCampaign", New Object() {token, campaign}, Me.AddCampaignOperationCompleted, userState)
    End Sub
    
    Private Sub OnAddCampaignOperationCompleted(ByVal arg As Object)
        If (Not (Me.AddCampaignCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent AddCampaignCompleted(Me, New AddCampaignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/UpdateCampaigns", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function UpdateCampaigns(ByVal token As String, ByVal campaigns() As CampaignStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct()
        Dim results() As Object = Me.Invoke("UpdateCampaigns", New Object() {token, campaigns})
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Function BeginUpdateCampaigns(ByVal token As String, ByVal campaigns() As CampaignStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("UpdateCampaigns", New Object() {token, campaigns}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndUpdateCampaigns(ByVal asyncResult As System.IAsyncResult) As CampaignStruct()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignsAsync(ByVal token As String, ByVal campaigns() As CampaignStruct)
        Me.UpdateCampaignsAsync(token, campaigns, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignsAsync(ByVal token As String, ByVal campaigns() As CampaignStruct, ByVal userState As Object)
        If (Me.UpdateCampaignsOperationCompleted Is Nothing) Then
            Me.UpdateCampaignsOperationCompleted = AddressOf Me.OnUpdateCampaignsOperationCompleted
        End If
        Me.InvokeAsync("UpdateCampaigns", New Object() {token, campaigns}, Me.UpdateCampaignsOperationCompleted, userState)
    End Sub
    
    Private Sub OnUpdateCampaignsOperationCompleted(ByVal arg As Object)
        If (Not (Me.UpdateCampaignsCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent UpdateCampaignsCompleted(Me, New UpdateCampaignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/GetCampaign", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function GetCampaign(ByVal token As String, ByVal campaign_id As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct
        Dim results() As Object = Me.Invoke("GetCampaign", New Object() {token, campaign_id})
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Function BeginGetCampaign(ByVal token As String, ByVal campaign_id As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetCampaign", New Object() {token, campaign_id}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGetCampaign(ByVal asyncResult As System.IAsyncResult) As CampaignStruct
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Overloads Sub GetCampaignAsync(ByVal token As String, ByVal campaign_id As Integer)
        Me.GetCampaignAsync(token, campaign_id, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GetCampaignAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal userState As Object)
        If (Me.GetCampaignOperationCompleted Is Nothing) Then
            Me.GetCampaignOperationCompleted = AddressOf Me.OnGetCampaignOperationCompleted
        End If
        Me.InvokeAsync("GetCampaign", New Object() {token, campaign_id}, Me.GetCampaignOperationCompleted, userState)
    End Sub
    
    Private Sub OnGetCampaignOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetCampaignCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetCampaignCompleted(Me, New GetCampaignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/UpdateCampaignState", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function UpdateCampaignState(ByVal token As String, ByVal campaign As CampaignStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct
        Dim results() As Object = Me.Invoke("UpdateCampaignState", New Object() {token, campaign})
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Function BeginUpdateCampaignState(ByVal token As String, ByVal campaign As CampaignStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("UpdateCampaignState", New Object() {token, campaign}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndUpdateCampaignState(ByVal asyncResult As System.IAsyncResult) As CampaignStruct
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignStateAsync(ByVal token As String, ByVal campaign As CampaignStruct)
        Me.UpdateCampaignStateAsync(token, campaign, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignStateAsync(ByVal token As String, ByVal campaign As CampaignStruct, ByVal userState As Object)
        If (Me.UpdateCampaignStateOperationCompleted Is Nothing) Then
            Me.UpdateCampaignStateOperationCompleted = AddressOf Me.OnUpdateCampaignStateOperationCompleted
        End If
        Me.InvokeAsync("UpdateCampaignState", New Object() {token, campaign}, Me.UpdateCampaignStateOperationCompleted, userState)
    End Sub
    
    Private Sub OnUpdateCampaignStateOperationCompleted(ByVal arg As Object)
        If (Not (Me.UpdateCampaignStateCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent UpdateCampaignStateCompleted(Me, New UpdateCampaignStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/GetCampaignList", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function GetCampaignList(ByVal token As String, ByVal campaign_ids() As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct()
        Dim results() As Object = Me.Invoke("GetCampaignList", New Object() {token, campaign_ids})
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Function BeginGetCampaignList(ByVal token As String, ByVal campaign_ids() As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetCampaignList", New Object() {token, campaign_ids}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGetCampaignList(ByVal asyncResult As System.IAsyncResult) As CampaignStruct()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Overloads Sub GetCampaignListAsync(ByVal token As String, ByVal campaign_ids() As Integer)
        Me.GetCampaignListAsync(token, campaign_ids, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GetCampaignListAsync(ByVal token As String, ByVal campaign_ids() As Integer, ByVal userState As Object)
        If (Me.GetCampaignListOperationCompleted Is Nothing) Then
            Me.GetCampaignListOperationCompleted = AddressOf Me.OnGetCampaignListOperationCompleted
        End If
        Me.InvokeAsync("GetCampaignList", New Object() {token, campaign_ids}, Me.GetCampaignListOperationCompleted, userState)
    End Sub
    
    Private Sub OnGetCampaignListOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetCampaignListCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetCampaignListCompleted(Me, New GetCampaignListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/UpdateCampaignBudget", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function UpdateCampaignBudget(ByVal token As String, ByVal campaign As CampaignStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct
        Dim results() As Object = Me.Invoke("UpdateCampaignBudget", New Object() {token, campaign})
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Function BeginUpdateCampaignBudget(ByVal token As String, ByVal campaign As CampaignStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("UpdateCampaignBudget", New Object() {token, campaign}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndUpdateCampaignBudget(ByVal asyncResult As System.IAsyncResult) As CampaignStruct
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignBudgetAsync(ByVal token As String, ByVal campaign As CampaignStruct)
        Me.UpdateCampaignBudgetAsync(token, campaign, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignBudgetAsync(ByVal token As String, ByVal campaign As CampaignStruct, ByVal userState As Object)
        If (Me.UpdateCampaignBudgetOperationCompleted Is Nothing) Then
            Me.UpdateCampaignBudgetOperationCompleted = AddressOf Me.OnUpdateCampaignBudgetOperationCompleted
        End If
        Me.InvokeAsync("UpdateCampaignBudget", New Object() {token, campaign}, Me.UpdateCampaignBudgetOperationCompleted, userState)
    End Sub
    
    Private Sub OnUpdateCampaignBudgetOperationCompleted(ByVal arg As Object)
        If (Not (Me.UpdateCampaignBudgetCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent UpdateCampaignBudgetCompleted(Me, New UpdateCampaignBudgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/UpdateCampaignStates", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function UpdateCampaignStates(ByVal token As String, ByVal campaigns() As CampaignStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct()
        Dim results() As Object = Me.Invoke("UpdateCampaignStates", New Object() {token, campaigns})
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Function BeginUpdateCampaignStates(ByVal token As String, ByVal campaigns() As CampaignStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("UpdateCampaignStates", New Object() {token, campaigns}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndUpdateCampaignStates(ByVal asyncResult As System.IAsyncResult) As CampaignStruct()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignStatesAsync(ByVal token As String, ByVal campaigns() As CampaignStruct)
        Me.UpdateCampaignStatesAsync(token, campaigns, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignStatesAsync(ByVal token As String, ByVal campaigns() As CampaignStruct, ByVal userState As Object)
        If (Me.UpdateCampaignStatesOperationCompleted Is Nothing) Then
            Me.UpdateCampaignStatesOperationCompleted = AddressOf Me.OnUpdateCampaignStatesOperationCompleted
        End If
        Me.InvokeAsync("UpdateCampaignStates", New Object() {token, campaigns}, Me.UpdateCampaignStatesOperationCompleted, userState)
    End Sub
    
    Private Sub OnUpdateCampaignStatesOperationCompleted(ByVal arg As Object)
        If (Not (Me.UpdateCampaignStatesCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent UpdateCampaignStatesCompleted(Me, New UpdateCampaignStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/AddCampaigns", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function AddCampaigns(ByVal token As String, ByVal campaigns() As CampaignStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct()
        Dim results() As Object = Me.Invoke("AddCampaigns", New Object() {token, campaigns})
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Function BeginAddCampaigns(ByVal token As String, ByVal campaigns() As CampaignStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("AddCampaigns", New Object() {token, campaigns}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndAddCampaigns(ByVal asyncResult As System.IAsyncResult) As CampaignStruct()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Overloads Sub AddCampaignsAsync(ByVal token As String, ByVal campaigns() As CampaignStruct)
        Me.AddCampaignsAsync(token, campaigns, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub AddCampaignsAsync(ByVal token As String, ByVal campaigns() As CampaignStruct, ByVal userState As Object)
        If (Me.AddCampaignsOperationCompleted Is Nothing) Then
            Me.AddCampaignsOperationCompleted = AddressOf Me.OnAddCampaignsOperationCompleted
        End If
        Me.InvokeAsync("AddCampaigns", New Object() {token, campaigns}, Me.AddCampaignsOperationCompleted, userState)
    End Sub
    
    Private Sub OnAddCampaignsOperationCompleted(ByVal arg As Object)
        If (Not (Me.AddCampaignsCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent AddCampaignsCompleted(Me, New AddCampaignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/GetGeoTargeting", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function GetGeoTargeting(ByVal token As String, ByVal campaign_id As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> GeoStruct
        Dim results() As Object = Me.Invoke("GetGeoTargeting", New Object() {token, campaign_id})
        Return CType(results(0),GeoStruct)
    End Function
    
    '''<remarks/>
    Public Function BeginGetGeoTargeting(ByVal token As String, ByVal campaign_id As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetGeoTargeting", New Object() {token, campaign_id}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGetGeoTargeting(ByVal asyncResult As System.IAsyncResult) As GeoStruct
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),GeoStruct)
    End Function
    
    '''<remarks/>
    Public Overloads Sub GetGeoTargetingAsync(ByVal token As String, ByVal campaign_id As Integer)
        Me.GetGeoTargetingAsync(token, campaign_id, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GetGeoTargetingAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal userState As Object)
        If (Me.GetGeoTargetingOperationCompleted Is Nothing) Then
            Me.GetGeoTargetingOperationCompleted = AddressOf Me.OnGetGeoTargetingOperationCompleted
        End If
        Me.InvokeAsync("GetGeoTargeting", New Object() {token, campaign_id}, Me.GetGeoTargetingOperationCompleted, userState)
    End Sub
    
    Private Sub OnGetGeoTargetingOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetGeoTargetingCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetGeoTargetingCompleted(Me, New GetGeoTargetingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/UpdateCampaignBudgets", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function UpdateCampaignBudgets(ByVal token As String, ByVal campaigns() As CampaignStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct()
        Dim results() As Object = Me.Invoke("UpdateCampaignBudgets", New Object() {token, campaigns})
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Function BeginUpdateCampaignBudgets(ByVal token As String, ByVal campaigns() As CampaignStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("UpdateCampaignBudgets", New Object() {token, campaigns}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndUpdateCampaignBudgets(ByVal asyncResult As System.IAsyncResult) As CampaignStruct()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignBudgetsAsync(ByVal token As String, ByVal campaigns() As CampaignStruct)
        Me.UpdateCampaignBudgetsAsync(token, campaigns, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignBudgetsAsync(ByVal token As String, ByVal campaigns() As CampaignStruct, ByVal userState As Object)
        If (Me.UpdateCampaignBudgetsOperationCompleted Is Nothing) Then
            Me.UpdateCampaignBudgetsOperationCompleted = AddressOf Me.OnUpdateCampaignBudgetsOperationCompleted
        End If
        Me.InvokeAsync("UpdateCampaignBudgets", New Object() {token, campaigns}, Me.UpdateCampaignBudgetsOperationCompleted, userState)
    End Sub
    
    Private Sub OnUpdateCampaignBudgetsOperationCompleted(ByVal arg As Object)
        If (Not (Me.UpdateCampaignBudgetsCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent UpdateCampaignBudgetsCompleted(Me, New UpdateCampaignBudgetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/GetAllCampaigns", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function GetAllCampaigns(ByVal token As String, ByVal account_id As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct()
        Dim results() As Object = Me.Invoke("GetAllCampaigns", New Object() {token, account_id})
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Function BeginGetAllCampaigns(ByVal token As String, ByVal account_id As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetAllCampaigns", New Object() {token, account_id}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGetAllCampaigns(ByVal asyncResult As System.IAsyncResult) As CampaignStruct()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct())
    End Function
    
    '''<remarks/>
    Public Overloads Sub GetAllCampaignsAsync(ByVal token As String, ByVal account_id As Integer)
        Me.GetAllCampaignsAsync(token, account_id, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GetAllCampaignsAsync(ByVal token As String, ByVal account_id As Integer, ByVal userState As Object)
        If (Me.GetAllCampaignsOperationCompleted Is Nothing) Then
            Me.GetAllCampaignsOperationCompleted = AddressOf Me.OnGetAllCampaignsOperationCompleted
        End If
        Me.InvokeAsync("GetAllCampaigns", New Object() {token, account_id}, Me.GetAllCampaignsOperationCompleted, userState)
    End Sub
    
    Private Sub OnGetAllCampaignsOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetAllCampaignsCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetAllCampaignsCompleted(Me, New GetAllCampaignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("/campaigns/api/UpdateCampaignMaxCpc", RequestNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
    Public Function UpdateCampaignMaxCpc(ByVal token As String, ByVal campaign As CampaignStruct) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignStruct
        Dim results() As Object = Me.Invoke("UpdateCampaignMaxCpc", New Object() {token, campaign})
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Function BeginUpdateCampaignMaxCpc(ByVal token As String, ByVal campaign As CampaignStruct, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("UpdateCampaignMaxCpc", New Object() {token, campaign}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndUpdateCampaignMaxCpc(ByVal asyncResult As System.IAsyncResult) As CampaignStruct
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),CampaignStruct)
    End Function
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignMaxCpcAsync(ByVal token As String, ByVal campaign As CampaignStruct)
        Me.UpdateCampaignMaxCpcAsync(token, campaign, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub UpdateCampaignMaxCpcAsync(ByVal token As String, ByVal campaign As CampaignStruct, ByVal userState As Object)
        If (Me.UpdateCampaignMaxCpcOperationCompleted Is Nothing) Then
            Me.UpdateCampaignMaxCpcOperationCompleted = AddressOf Me.OnUpdateCampaignMaxCpcOperationCompleted
        End If
        Me.InvokeAsync("UpdateCampaignMaxCpc", New Object() {token, campaign}, Me.UpdateCampaignMaxCpcOperationCompleted, userState)
    End Sub
    
    Private Sub OnUpdateCampaignMaxCpcOperationCompleted(ByVal arg As Object)
        If (Not (Me.UpdateCampaignMaxCpcCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent UpdateCampaignMaxCpcCompleted(Me, New UpdateCampaignMaxCpcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    Public Shadows Sub CancelAsync(ByVal userState As Object)
        MyBase.CancelAsync(userState)
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
Partial Public Class GeoStruct
    
    Private countriesField() As String
    
    Private citiesField() As String
    
    Private regionsField() As String
    
    Private postalsField() As String
    
    Private dmasField() As Integer
    
    '''<remarks/>
    Public Property countries() As String()
        Get
            Return Me.countriesField
        End Get
        Set
            Me.countriesField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property cities() As String()
        Get
            Return Me.citiesField
        End Get
        Set
            Me.citiesField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property regions() As String()
        Get
            Return Me.regionsField
        End Get
        Set
            Me.regionsField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property postals() As String()
        Get
            Return Me.postalsField
        End Get
        Set
            Me.postalsField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property dmas() As Integer()
        Get
            Return Me.dmasField
        End Get
        Set
            Me.dmasField = value
        End Set
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://api-secure.sponsoredlistings.ask.com/api/v3")>  _
Partial Public Class CampaignStruct
    
    Private max_cpcField As Double
    
    Private descriptionField As String
    
    Private reference_numberField As String
    
    Private account_idField As Integer
    
    Private end_dateField As Date
    
    Private nameField As String
    
    Private budgetField As Double
    
    Private campaign_stateField As String
    
    Private start_dateField As Date
    
    Private campaign_idField As Integer
    
    '''<remarks/>
    Public Property max_cpc() As Double
        Get
            Return Me.max_cpcField
        End Get
        Set
            Me.max_cpcField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property description() As String
        Get
            Return Me.descriptionField
        End Get
        Set
            Me.descriptionField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property reference_number() As String
        Get
            Return Me.reference_numberField
        End Get
        Set
            Me.reference_numberField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property account_id() As Integer
        Get
            Return Me.account_idField
        End Get
        Set
            Me.account_idField = value
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.SoapElementAttribute(DataType:="date")>  _
    Public Property end_date() As Date
        Get
            Return Me.end_dateField
        End Get
        Set
            Me.end_dateField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property name() As String
        Get
            Return Me.nameField
        End Get
        Set
            Me.nameField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property budget() As Double
        Get
            Return Me.budgetField
        End Get
        Set
            Me.budgetField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property campaign_state() As String
        Get
            Return Me.campaign_stateField
        End Get
        Set
            Me.campaign_stateField = value
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.SoapElementAttribute(DataType:="date")>  _
    Public Property start_date() As Date
        Get
            Return Me.start_dateField
        End Get
        Set
            Me.start_dateField = value
        End Set
    End Property
    
    '''<remarks/>
    Public Property campaign_id() As Integer
        Get
            Return Me.campaign_idField
        End Get
        Set
            Me.campaign_idField = value
        End Set
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub SetGeoTargetingCompletedEventHandler(ByVal sender As Object, ByVal e As SetGeoTargetingCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class SetGeoTargetingCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As GeoStruct
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),GeoStruct)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub UpdateCampaignCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampaignCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class UpdateCampaignCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub UpdateCampaignMaxCpcsCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampaignMaxCpcsCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class UpdateCampaignMaxCpcsCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct()
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct())
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub AddCampaignCompletedEventHandler(ByVal sender As Object, ByVal e As AddCampaignCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class AddCampaignCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub UpdateCampaignsCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampaignsCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class UpdateCampaignsCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct()
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct())
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub GetCampaignCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GetCampaignCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub UpdateCampaignStateCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampaignStateCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class UpdateCampaignStateCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub GetCampaignListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignListCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GetCampaignListCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct()
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct())
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub UpdateCampaignBudgetCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampaignBudgetCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class UpdateCampaignBudgetCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub UpdateCampaignStatesCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampaignStatesCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class UpdateCampaignStatesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct()
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct())
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub AddCampaignsCompletedEventHandler(ByVal sender As Object, ByVal e As AddCampaignsCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class AddCampaignsCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct()
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct())
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub GetGeoTargetingCompletedEventHandler(ByVal sender As Object, ByVal e As GetGeoTargetingCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GetGeoTargetingCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As GeoStruct
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),GeoStruct)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub UpdateCampaignBudgetsCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampaignBudgetsCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class UpdateCampaignBudgetsCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct()
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct())
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub GetAllCampaignsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllCampaignsCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GetAllCampaignsCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct()
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct())
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub UpdateCampaignMaxCpcCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampaignMaxCpcCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class UpdateCampaignMaxCpcCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As CampaignStruct
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),CampaignStruct)
        End Get
    End Property
End Class
End Namespace