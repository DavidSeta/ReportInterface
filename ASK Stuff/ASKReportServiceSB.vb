'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1433
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Namespace ASKWebServicesSB

    '
    'This source code was auto-generated by wsdl, Version=2.0.50727.42.
    '

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="ReportsReportsBinding", [Namespace]:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
    Partial Public Class ReportsService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private GetKeywordConvReportsByPageOperationCompleted As System.Threading.SendOrPostCallback

        Private GetKeywordReportsByPageOperationCompleted As System.Threading.SendOrPostCallback

        Private GetKeywordImpReportOperationCompleted As System.Threading.SendOrPostCallback

        Private GetAllCampaignConvReportsOperationCompleted As System.Threading.SendOrPostCallback

        Private GetNumAllKeywordImpReportsPagesOperationCompleted As System.Threading.SendOrPostCallback

        Private GetKeywordImpReportsOperationCompleted As System.Threading.SendOrPostCallback

        Private GetNumKeywordReportsPagesOperationCompleted As System.Threading.SendOrPostCallback

        Private GetNumKeywordConvReportsPagesOperationCompleted As System.Threading.SendOrPostCallback

        Private GetCampaignImpReportOperationCompleted As System.Threading.SendOrPostCallback

        Private GetKeywordReportOperationCompleted As System.Threading.SendOrPostCallback

        Private GetAllKeywordConvReportsOperationCompleted As System.Threading.SendOrPostCallback

        Private GetAllKeywordReportsOperationCompleted As System.Threading.SendOrPostCallback

        Private GetKeywordImpReportsByPageOperationCompleted As System.Threading.SendOrPostCallback

        Private GetAllCampaignImpReportsOperationCompleted As System.Threading.SendOrPostCallback

        Private GetNumKeywordImpReportsPagesOperationCompleted As System.Threading.SendOrPostCallback

        Private GetAllKeywordReportsByPageOperationCompleted As System.Threading.SendOrPostCallback

        Private GetAllKeywordConvReportsByPageOperationCompleted As System.Threading.SendOrPostCallback

        Private GetKeywordConvReportOperationCompleted As System.Threading.SendOrPostCallback

        Private GetAllCampaignReportsOperationCompleted As System.Threading.SendOrPostCallback

        Private GetNumAllKeywordConvReportsPagesOperationCompleted As System.Threading.SendOrPostCallback

        Private GetNumAllKeywordReportsPagesOperationCompleted As System.Threading.SendOrPostCallback

        Private GetAllKeywordImpReportsOperationCompleted As System.Threading.SendOrPostCallback

        Private GetKeywordReportsOperationCompleted As System.Threading.SendOrPostCallback

        Private GetKeywordConvReportsOperationCompleted As System.Threading.SendOrPostCallback

        Private GetAllKeywordImpReportsByPageOperationCompleted As System.Threading.SendOrPostCallback

        Private GetCampaignReportOperationCompleted As System.Threading.SendOrPostCallback

        Private GetCampaignConvReportOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = "https://api-sandbox.sponsoredlistings.ask.com/api/v3/reports/api"
        End Sub

        '''<remarks/>
        Public Event GetKeywordConvReportsByPageCompleted As GetKeywordConvReportsByPageCompletedEventHandler

        '''<remarks/>
        Public Event GetKeywordReportsByPageCompleted As GetKeywordReportsByPageCompletedEventHandler

        '''<remarks/>
        Public Event GetKeywordImpReportCompleted As GetKeywordImpReportCompletedEventHandler

        '''<remarks/>
        Public Event GetAllCampaignConvReportsCompleted As GetAllCampaignConvReportsCompletedEventHandler

        '''<remarks/>
        Public Event GetNumAllKeywordImpReportsPagesCompleted As GetNumAllKeywordImpReportsPagesCompletedEventHandler

        '''<remarks/>
        Public Event GetKeywordImpReportsCompleted As GetKeywordImpReportsCompletedEventHandler

        '''<remarks/>
        Public Event GetNumKeywordReportsPagesCompleted As GetNumKeywordReportsPagesCompletedEventHandler

        '''<remarks/>
        Public Event GetNumKeywordConvReportsPagesCompleted As GetNumKeywordConvReportsPagesCompletedEventHandler

        '''<remarks/>
        Public Event GetCampaignImpReportCompleted As GetCampaignImpReportCompletedEventHandler

        '''<remarks/>
        Public Event GetKeywordReportCompleted As GetKeywordReportCompletedEventHandler

        '''<remarks/>
        Public Event GetAllKeywordConvReportsCompleted As GetAllKeywordConvReportsCompletedEventHandler

        '''<remarks/>
        Public Event GetAllKeywordReportsCompleted As GetAllKeywordReportsCompletedEventHandler

        '''<remarks/>
        Public Event GetKeywordImpReportsByPageCompleted As GetKeywordImpReportsByPageCompletedEventHandler

        '''<remarks/>
        Public Event GetAllCampaignImpReportsCompleted As GetAllCampaignImpReportsCompletedEventHandler

        '''<remarks/>
        Public Event GetNumKeywordImpReportsPagesCompleted As GetNumKeywordImpReportsPagesCompletedEventHandler

        '''<remarks/>
        Public Event GetAllKeywordReportsByPageCompleted As GetAllKeywordReportsByPageCompletedEventHandler

        '''<remarks/>
        Public Event GetAllKeywordConvReportsByPageCompleted As GetAllKeywordConvReportsByPageCompletedEventHandler

        '''<remarks/>
        Public Event GetKeywordConvReportCompleted As GetKeywordConvReportCompletedEventHandler

        '''<remarks/>
        Public Event GetAllCampaignReportsCompleted As GetAllCampaignReportsCompletedEventHandler

        '''<remarks/>
        Public Event GetNumAllKeywordConvReportsPagesCompleted As GetNumAllKeywordConvReportsPagesCompletedEventHandler

        '''<remarks/>
        Public Event GetNumAllKeywordReportsPagesCompleted As GetNumAllKeywordReportsPagesCompletedEventHandler

        '''<remarks/>
        Public Event GetAllKeywordImpReportsCompleted As GetAllKeywordImpReportsCompletedEventHandler

        '''<remarks/>
        Public Event GetKeywordReportsCompleted As GetKeywordReportsCompletedEventHandler

        '''<remarks/>
        Public Event GetKeywordConvReportsCompleted As GetKeywordConvReportsCompletedEventHandler

        '''<remarks/>
        Public Event GetAllKeywordImpReportsByPageCompleted As GetAllKeywordImpReportsByPageCompletedEventHandler

        '''<remarks/>
        Public Event GetCampaignReportCompleted As GetCampaignReportCompletedEventHandler

        '''<remarks/>
        Public Event GetCampaignConvReportCompleted As GetCampaignConvReportCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetKeywordConvReportsByPage", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetKeywordConvReportsByPage(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date, ByVal page As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordConvReportStruct()
            Dim results() As Object = Me.Invoke("GetKeywordConvReportsByPage", New Object() {token, campaign_id, start_date, end_date, page})
            Return CType(results(0), KeywordConvReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetKeywordConvReportsByPage(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetKeywordConvReportsByPage", New Object() {token, campaign_id, start_date, end_date, page}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetKeywordConvReportsByPage(ByVal asyncResult As System.IAsyncResult) As KeywordConvReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordConvReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetKeywordConvReportsByPageAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer)
            Me.GetKeywordConvReportsByPageAsync(token, campaign_id, start_date, end_date, page, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetKeywordConvReportsByPageAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal userState As Object)
            If (Me.GetKeywordConvReportsByPageOperationCompleted Is Nothing) Then
                Me.GetKeywordConvReportsByPageOperationCompleted = AddressOf Me.OnGetKeywordConvReportsByPageOperationCompleted
            End If
            Me.InvokeAsync("GetKeywordConvReportsByPage", New Object() {token, campaign_id, start_date, end_date, page}, Me.GetKeywordConvReportsByPageOperationCompleted, userState)
        End Sub

        Private Sub OnGetKeywordConvReportsByPageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKeywordConvReportsByPageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKeywordConvReportsByPageCompleted(Me, New GetKeywordConvReportsByPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetKeywordReportsByPage", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetKeywordReportsByPage(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date, ByVal page As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordReportStruct()
            Dim results() As Object = Me.Invoke("GetKeywordReportsByPage", New Object() {token, campaign_id, start_date, end_date, page})
            Return CType(results(0), KeywordReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetKeywordReportsByPage(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetKeywordReportsByPage", New Object() {token, campaign_id, start_date, end_date, page}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetKeywordReportsByPage(ByVal asyncResult As System.IAsyncResult) As KeywordReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetKeywordReportsByPageAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer)
            Me.GetKeywordReportsByPageAsync(token, campaign_id, start_date, end_date, page, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetKeywordReportsByPageAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal userState As Object)
            If (Me.GetKeywordReportsByPageOperationCompleted Is Nothing) Then
                Me.GetKeywordReportsByPageOperationCompleted = AddressOf Me.OnGetKeywordReportsByPageOperationCompleted
            End If
            Me.InvokeAsync("GetKeywordReportsByPage", New Object() {token, campaign_id, start_date, end_date, page}, Me.GetKeywordReportsByPageOperationCompleted, userState)
        End Sub

        Private Sub OnGetKeywordReportsByPageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKeywordReportsByPageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKeywordReportsByPageCompleted(Me, New GetKeywordReportsByPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetKeywordImpReport", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetKeywordImpReport(ByVal token As String, ByVal ad_keyword_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordImpReportStruct
            Dim results() As Object = Me.Invoke("GetKeywordImpReport", New Object() {token, ad_keyword_id, start_date, end_date})
            Return CType(results(0), KeywordImpReportStruct)
        End Function

        '''<remarks/>
        Public Function BeginGetKeywordImpReport(ByVal token As String, ByVal ad_keyword_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetKeywordImpReport", New Object() {token, ad_keyword_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetKeywordImpReport(ByVal asyncResult As System.IAsyncResult) As KeywordImpReportStruct
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordImpReportStruct)
        End Function

        '''<remarks/>
        Public Overloads Sub GetKeywordImpReportAsync(ByVal token As String, ByVal ad_keyword_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetKeywordImpReportAsync(token, ad_keyword_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetKeywordImpReportAsync(ByVal token As String, ByVal ad_keyword_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetKeywordImpReportOperationCompleted Is Nothing) Then
                Me.GetKeywordImpReportOperationCompleted = AddressOf Me.OnGetKeywordImpReportOperationCompleted
            End If
            Me.InvokeAsync("GetKeywordImpReport", New Object() {token, ad_keyword_id, start_date, end_date}, Me.GetKeywordImpReportOperationCompleted, userState)
        End Sub

        Private Sub OnGetKeywordImpReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKeywordImpReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKeywordImpReportCompleted(Me, New GetKeywordImpReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetAllCampaignConvReports", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetAllCampaignConvReports(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignConvReportStruct()
            Dim results() As Object = Me.Invoke("GetAllCampaignConvReports", New Object() {token, account_id, start_date, end_date})
            Return CType(results(0), CampaignConvReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetAllCampaignConvReports(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllCampaignConvReports", New Object() {token, account_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetAllCampaignConvReports(ByVal asyncResult As System.IAsyncResult) As CampaignConvReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), CampaignConvReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetAllCampaignConvReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetAllCampaignConvReportsAsync(token, account_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetAllCampaignConvReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetAllCampaignConvReportsOperationCompleted Is Nothing) Then
                Me.GetAllCampaignConvReportsOperationCompleted = AddressOf Me.OnGetAllCampaignConvReportsOperationCompleted
            End If
            Me.InvokeAsync("GetAllCampaignConvReports", New Object() {token, account_id, start_date, end_date}, Me.GetAllCampaignConvReportsOperationCompleted, userState)
        End Sub

        Private Sub OnGetAllCampaignConvReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllCampaignConvReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllCampaignConvReportsCompleted(Me, New GetAllCampaignConvReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetNumAllKeywordImpReportsPages", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetNumAllKeywordImpReportsPages(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("GetNumAllKeywordImpReportsPages", New Object() {token, account_id, start_date, end_date})
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Function BeginGetNumAllKeywordImpReportsPages(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetNumAllKeywordImpReportsPages", New Object() {token, account_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetNumAllKeywordImpReportsPages(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Overloads Sub GetNumAllKeywordImpReportsPagesAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetNumAllKeywordImpReportsPagesAsync(token, account_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetNumAllKeywordImpReportsPagesAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetNumAllKeywordImpReportsPagesOperationCompleted Is Nothing) Then
                Me.GetNumAllKeywordImpReportsPagesOperationCompleted = AddressOf Me.OnGetNumAllKeywordImpReportsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetNumAllKeywordImpReportsPages", New Object() {token, account_id, start_date, end_date}, Me.GetNumAllKeywordImpReportsPagesOperationCompleted, userState)
        End Sub

        Private Sub OnGetNumAllKeywordImpReportsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNumAllKeywordImpReportsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNumAllKeywordImpReportsPagesCompleted(Me, New GetNumAllKeywordImpReportsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetKeywordImpReports", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetKeywordImpReports(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordImpReportStruct()
            Dim results() As Object = Me.Invoke("GetKeywordImpReports", New Object() {token, campaign_id, start_date, end_date})
            Return CType(results(0), KeywordImpReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetKeywordImpReports(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetKeywordImpReports", New Object() {token, campaign_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetKeywordImpReports(ByVal asyncResult As System.IAsyncResult) As KeywordImpReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordImpReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetKeywordImpReportsAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetKeywordImpReportsAsync(token, campaign_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetKeywordImpReportsAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetKeywordImpReportsOperationCompleted Is Nothing) Then
                Me.GetKeywordImpReportsOperationCompleted = AddressOf Me.OnGetKeywordImpReportsOperationCompleted
            End If
            Me.InvokeAsync("GetKeywordImpReports", New Object() {token, campaign_id, start_date, end_date}, Me.GetKeywordImpReportsOperationCompleted, userState)
        End Sub

        Private Sub OnGetKeywordImpReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKeywordImpReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKeywordImpReportsCompleted(Me, New GetKeywordImpReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetNumKeywordReportsPages", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetNumKeywordReportsPages(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("GetNumKeywordReportsPages", New Object() {token, campaign_id, start_date, end_date})
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Function BeginGetNumKeywordReportsPages(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetNumKeywordReportsPages", New Object() {token, campaign_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetNumKeywordReportsPages(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Overloads Sub GetNumKeywordReportsPagesAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetNumKeywordReportsPagesAsync(token, campaign_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetNumKeywordReportsPagesAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetNumKeywordReportsPagesOperationCompleted Is Nothing) Then
                Me.GetNumKeywordReportsPagesOperationCompleted = AddressOf Me.OnGetNumKeywordReportsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetNumKeywordReportsPages", New Object() {token, campaign_id, start_date, end_date}, Me.GetNumKeywordReportsPagesOperationCompleted, userState)
        End Sub

        Private Sub OnGetNumKeywordReportsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNumKeywordReportsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNumKeywordReportsPagesCompleted(Me, New GetNumKeywordReportsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetNumKeywordConvReportsPages", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetNumKeywordConvReportsPages(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("GetNumKeywordConvReportsPages", New Object() {token, campaign_id, start_date, end_date})
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Function BeginGetNumKeywordConvReportsPages(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetNumKeywordConvReportsPages", New Object() {token, campaign_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetNumKeywordConvReportsPages(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Overloads Sub GetNumKeywordConvReportsPagesAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetNumKeywordConvReportsPagesAsync(token, campaign_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetNumKeywordConvReportsPagesAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetNumKeywordConvReportsPagesOperationCompleted Is Nothing) Then
                Me.GetNumKeywordConvReportsPagesOperationCompleted = AddressOf Me.OnGetNumKeywordConvReportsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetNumKeywordConvReportsPages", New Object() {token, campaign_id, start_date, end_date}, Me.GetNumKeywordConvReportsPagesOperationCompleted, userState)
        End Sub

        Private Sub OnGetNumKeywordConvReportsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNumKeywordConvReportsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNumKeywordConvReportsPagesCompleted(Me, New GetNumKeywordConvReportsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetCampaignImpReport", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetCampaignImpReport(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignImpReportStruct
            Dim results() As Object = Me.Invoke("GetCampaignImpReport", New Object() {token, campaign_id, start_date, end_date})
            Return CType(results(0), CampaignImpReportStruct)
        End Function

        '''<remarks/>
        Public Function BeginGetCampaignImpReport(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCampaignImpReport", New Object() {token, campaign_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetCampaignImpReport(ByVal asyncResult As System.IAsyncResult) As CampaignImpReportStruct
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), CampaignImpReportStruct)
        End Function

        '''<remarks/>
        Public Overloads Sub GetCampaignImpReportAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetCampaignImpReportAsync(token, campaign_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetCampaignImpReportAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetCampaignImpReportOperationCompleted Is Nothing) Then
                Me.GetCampaignImpReportOperationCompleted = AddressOf Me.OnGetCampaignImpReportOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignImpReport", New Object() {token, campaign_id, start_date, end_date}, Me.GetCampaignImpReportOperationCompleted, userState)
        End Sub

        Private Sub OnGetCampaignImpReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignImpReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignImpReportCompleted(Me, New GetCampaignImpReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetKeywordReport", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetKeywordReport(ByVal token As String, ByVal ad_keyword_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordReportStruct
            Dim results() As Object = Me.Invoke("GetKeywordReport", New Object() {token, ad_keyword_id, start_date, end_date})
            Return CType(results(0), KeywordReportStruct)
        End Function

        '''<remarks/>
        Public Function BeginGetKeywordReport(ByVal token As String, ByVal ad_keyword_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetKeywordReport", New Object() {token, ad_keyword_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetKeywordReport(ByVal asyncResult As System.IAsyncResult) As KeywordReportStruct
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordReportStruct)
        End Function

        '''<remarks/>
        Public Overloads Sub GetKeywordReportAsync(ByVal token As String, ByVal ad_keyword_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetKeywordReportAsync(token, ad_keyword_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetKeywordReportAsync(ByVal token As String, ByVal ad_keyword_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetKeywordReportOperationCompleted Is Nothing) Then
                Me.GetKeywordReportOperationCompleted = AddressOf Me.OnGetKeywordReportOperationCompleted
            End If
            Me.InvokeAsync("GetKeywordReport", New Object() {token, ad_keyword_id, start_date, end_date}, Me.GetKeywordReportOperationCompleted, userState)
        End Sub

        Private Sub OnGetKeywordReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKeywordReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKeywordReportCompleted(Me, New GetKeywordReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetAllKeywordConvReports", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetAllKeywordConvReports(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordConvReportStruct()
            Dim results() As Object = Me.Invoke("GetAllKeywordConvReports", New Object() {token, account_id, start_date, end_date})
            Return CType(results(0), KeywordConvReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetAllKeywordConvReports(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllKeywordConvReports", New Object() {token, account_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetAllKeywordConvReports(ByVal asyncResult As System.IAsyncResult) As KeywordConvReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordConvReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetAllKeywordConvReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetAllKeywordConvReportsAsync(token, account_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetAllKeywordConvReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetAllKeywordConvReportsOperationCompleted Is Nothing) Then
                Me.GetAllKeywordConvReportsOperationCompleted = AddressOf Me.OnGetAllKeywordConvReportsOperationCompleted
            End If
            Me.InvokeAsync("GetAllKeywordConvReports", New Object() {token, account_id, start_date, end_date}, Me.GetAllKeywordConvReportsOperationCompleted, userState)
        End Sub

        Private Sub OnGetAllKeywordConvReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllKeywordConvReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllKeywordConvReportsCompleted(Me, New GetAllKeywordConvReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetAllKeywordReports", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetAllKeywordReports(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordReportStruct()
            Dim results() As Object = Me.Invoke("GetAllKeywordReports", New Object() {token, account_id, start_date, end_date})
            Return CType(results(0), KeywordReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetAllKeywordReports(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllKeywordReports", New Object() {token, account_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetAllKeywordReports(ByVal asyncResult As System.IAsyncResult) As KeywordReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetAllKeywordReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetAllKeywordReportsAsync(token, account_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetAllKeywordReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetAllKeywordReportsOperationCompleted Is Nothing) Then
                Me.GetAllKeywordReportsOperationCompleted = AddressOf Me.OnGetAllKeywordReportsOperationCompleted
            End If
            Me.InvokeAsync("GetAllKeywordReports", New Object() {token, account_id, start_date, end_date}, Me.GetAllKeywordReportsOperationCompleted, userState)
        End Sub

        Private Sub OnGetAllKeywordReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllKeywordReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllKeywordReportsCompleted(Me, New GetAllKeywordReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetKeywordImpReportsByPage", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetKeywordImpReportsByPage(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date, ByVal page As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordImpReportStruct()
            Dim results() As Object = Me.Invoke("GetKeywordImpReportsByPage", New Object() {token, campaign_id, start_date, end_date, page})
            Return CType(results(0), KeywordImpReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetKeywordImpReportsByPage(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetKeywordImpReportsByPage", New Object() {token, campaign_id, start_date, end_date, page}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetKeywordImpReportsByPage(ByVal asyncResult As System.IAsyncResult) As KeywordImpReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordImpReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetKeywordImpReportsByPageAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer)
            Me.GetKeywordImpReportsByPageAsync(token, campaign_id, start_date, end_date, page, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetKeywordImpReportsByPageAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal userState As Object)
            If (Me.GetKeywordImpReportsByPageOperationCompleted Is Nothing) Then
                Me.GetKeywordImpReportsByPageOperationCompleted = AddressOf Me.OnGetKeywordImpReportsByPageOperationCompleted
            End If
            Me.InvokeAsync("GetKeywordImpReportsByPage", New Object() {token, campaign_id, start_date, end_date, page}, Me.GetKeywordImpReportsByPageOperationCompleted, userState)
        End Sub

        Private Sub OnGetKeywordImpReportsByPageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKeywordImpReportsByPageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKeywordImpReportsByPageCompleted(Me, New GetKeywordImpReportsByPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetAllCampaignImpReports", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetAllCampaignImpReports(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignImpReportStruct()
            Dim results() As Object = Me.Invoke("GetAllCampaignImpReports", New Object() {token, account_id, start_date, end_date})
            Return CType(results(0), CampaignImpReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetAllCampaignImpReports(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllCampaignImpReports", New Object() {token, account_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetAllCampaignImpReports(ByVal asyncResult As System.IAsyncResult) As CampaignImpReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), CampaignImpReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetAllCampaignImpReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetAllCampaignImpReportsAsync(token, account_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetAllCampaignImpReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetAllCampaignImpReportsOperationCompleted Is Nothing) Then
                Me.GetAllCampaignImpReportsOperationCompleted = AddressOf Me.OnGetAllCampaignImpReportsOperationCompleted
            End If
            Me.InvokeAsync("GetAllCampaignImpReports", New Object() {token, account_id, start_date, end_date}, Me.GetAllCampaignImpReportsOperationCompleted, userState)
        End Sub

        Private Sub OnGetAllCampaignImpReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllCampaignImpReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllCampaignImpReportsCompleted(Me, New GetAllCampaignImpReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetNumKeywordImpReportsPages", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetNumKeywordImpReportsPages(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("GetNumKeywordImpReportsPages", New Object() {token, campaign_id, start_date, end_date})
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Function BeginGetNumKeywordImpReportsPages(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetNumKeywordImpReportsPages", New Object() {token, campaign_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetNumKeywordImpReportsPages(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Overloads Sub GetNumKeywordImpReportsPagesAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetNumKeywordImpReportsPagesAsync(token, campaign_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetNumKeywordImpReportsPagesAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetNumKeywordImpReportsPagesOperationCompleted Is Nothing) Then
                Me.GetNumKeywordImpReportsPagesOperationCompleted = AddressOf Me.OnGetNumKeywordImpReportsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetNumKeywordImpReportsPages", New Object() {token, campaign_id, start_date, end_date}, Me.GetNumKeywordImpReportsPagesOperationCompleted, userState)
        End Sub

        Private Sub OnGetNumKeywordImpReportsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNumKeywordImpReportsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNumKeywordImpReportsPagesCompleted(Me, New GetNumKeywordImpReportsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetAllKeywordReportsByPage", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetAllKeywordReportsByPage(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date, ByVal page As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordReportStruct()
            Dim results() As Object = Me.Invoke("GetAllKeywordReportsByPage", New Object() {token, account_id, start_date, end_date, page})
            Return CType(results(0), KeywordReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetAllKeywordReportsByPage(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllKeywordReportsByPage", New Object() {token, account_id, start_date, end_date, page}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetAllKeywordReportsByPage(ByVal asyncResult As System.IAsyncResult) As KeywordReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetAllKeywordReportsByPageAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer)
            Me.GetAllKeywordReportsByPageAsync(token, account_id, start_date, end_date, page, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetAllKeywordReportsByPageAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal userState As Object)
            If (Me.GetAllKeywordReportsByPageOperationCompleted Is Nothing) Then
                Me.GetAllKeywordReportsByPageOperationCompleted = AddressOf Me.OnGetAllKeywordReportsByPageOperationCompleted
            End If
            Me.InvokeAsync("GetAllKeywordReportsByPage", New Object() {token, account_id, start_date, end_date, page}, Me.GetAllKeywordReportsByPageOperationCompleted, userState)
        End Sub

        Private Sub OnGetAllKeywordReportsByPageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllKeywordReportsByPageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllKeywordReportsByPageCompleted(Me, New GetAllKeywordReportsByPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetAllKeywordConvReportsByPage", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetAllKeywordConvReportsByPage(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date, ByVal page As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordConvReportStruct()
            Dim results() As Object = Me.Invoke("GetAllKeywordConvReportsByPage", New Object() {token, account_id, start_date, end_date, page})
            Return CType(results(0), KeywordConvReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetAllKeywordConvReportsByPage(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllKeywordConvReportsByPage", New Object() {token, account_id, start_date, end_date, page}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetAllKeywordConvReportsByPage(ByVal asyncResult As System.IAsyncResult) As KeywordConvReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordConvReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetAllKeywordConvReportsByPageAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer)
            Me.GetAllKeywordConvReportsByPageAsync(token, account_id, start_date, end_date, page, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetAllKeywordConvReportsByPageAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal userState As Object)
            If (Me.GetAllKeywordConvReportsByPageOperationCompleted Is Nothing) Then
                Me.GetAllKeywordConvReportsByPageOperationCompleted = AddressOf Me.OnGetAllKeywordConvReportsByPageOperationCompleted
            End If
            Me.InvokeAsync("GetAllKeywordConvReportsByPage", New Object() {token, account_id, start_date, end_date, page}, Me.GetAllKeywordConvReportsByPageOperationCompleted, userState)
        End Sub

        Private Sub OnGetAllKeywordConvReportsByPageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllKeywordConvReportsByPageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllKeywordConvReportsByPageCompleted(Me, New GetAllKeywordConvReportsByPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetKeywordConvReport", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetKeywordConvReport(ByVal token As String, ByVal ad_keyword_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordConvReportStruct
            Dim results() As Object = Me.Invoke("GetKeywordConvReport", New Object() {token, ad_keyword_id, start_date, end_date})
            Return CType(results(0), KeywordConvReportStruct)
        End Function

        '''<remarks/>
        Public Function BeginGetKeywordConvReport(ByVal token As String, ByVal ad_keyword_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetKeywordConvReport", New Object() {token, ad_keyword_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetKeywordConvReport(ByVal asyncResult As System.IAsyncResult) As KeywordConvReportStruct
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordConvReportStruct)
        End Function

        '''<remarks/>
        Public Overloads Sub GetKeywordConvReportAsync(ByVal token As String, ByVal ad_keyword_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetKeywordConvReportAsync(token, ad_keyword_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetKeywordConvReportAsync(ByVal token As String, ByVal ad_keyword_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetKeywordConvReportOperationCompleted Is Nothing) Then
                Me.GetKeywordConvReportOperationCompleted = AddressOf Me.OnGetKeywordConvReportOperationCompleted
            End If
            Me.InvokeAsync("GetKeywordConvReport", New Object() {token, ad_keyword_id, start_date, end_date}, Me.GetKeywordConvReportOperationCompleted, userState)
        End Sub

        Private Sub OnGetKeywordConvReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKeywordConvReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKeywordConvReportCompleted(Me, New GetKeywordConvReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetAllCampaignReports", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetAllCampaignReports(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignReportStruct()
            Dim results() As Object = Me.Invoke("GetAllCampaignReports", New Object() {token, account_id, start_date, end_date})
            Return CType(results(0), CampaignReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetAllCampaignReports(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllCampaignReports", New Object() {token, account_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetAllCampaignReports(ByVal asyncResult As System.IAsyncResult) As CampaignReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), CampaignReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetAllCampaignReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetAllCampaignReportsAsync(token, account_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetAllCampaignReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetAllCampaignReportsOperationCompleted Is Nothing) Then
                Me.GetAllCampaignReportsOperationCompleted = AddressOf Me.OnGetAllCampaignReportsOperationCompleted
            End If
            Me.InvokeAsync("GetAllCampaignReports", New Object() {token, account_id, start_date, end_date}, Me.GetAllCampaignReportsOperationCompleted, userState)
        End Sub

        Private Sub OnGetAllCampaignReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllCampaignReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllCampaignReportsCompleted(Me, New GetAllCampaignReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetNumAllKeywordConvReportsPages", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetNumAllKeywordConvReportsPages(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("GetNumAllKeywordConvReportsPages", New Object() {token, account_id, start_date, end_date})
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Function BeginGetNumAllKeywordConvReportsPages(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetNumAllKeywordConvReportsPages", New Object() {token, account_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetNumAllKeywordConvReportsPages(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Overloads Sub GetNumAllKeywordConvReportsPagesAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetNumAllKeywordConvReportsPagesAsync(token, account_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetNumAllKeywordConvReportsPagesAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetNumAllKeywordConvReportsPagesOperationCompleted Is Nothing) Then
                Me.GetNumAllKeywordConvReportsPagesOperationCompleted = AddressOf Me.OnGetNumAllKeywordConvReportsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetNumAllKeywordConvReportsPages", New Object() {token, account_id, start_date, end_date}, Me.GetNumAllKeywordConvReportsPagesOperationCompleted, userState)
        End Sub

        Private Sub OnGetNumAllKeywordConvReportsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNumAllKeywordConvReportsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNumAllKeywordConvReportsPagesCompleted(Me, New GetNumAllKeywordConvReportsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetNumAllKeywordReportsPages", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetNumAllKeywordReportsPages(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> Integer
            Dim results() As Object = Me.Invoke("GetNumAllKeywordReportsPages", New Object() {token, account_id, start_date, end_date})
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Function BeginGetNumAllKeywordReportsPages(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetNumAllKeywordReportsPages", New Object() {token, account_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetNumAllKeywordReportsPages(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Overloads Sub GetNumAllKeywordReportsPagesAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetNumAllKeywordReportsPagesAsync(token, account_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetNumAllKeywordReportsPagesAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetNumAllKeywordReportsPagesOperationCompleted Is Nothing) Then
                Me.GetNumAllKeywordReportsPagesOperationCompleted = AddressOf Me.OnGetNumAllKeywordReportsPagesOperationCompleted
            End If
            Me.InvokeAsync("GetNumAllKeywordReportsPages", New Object() {token, account_id, start_date, end_date}, Me.GetNumAllKeywordReportsPagesOperationCompleted, userState)
        End Sub

        Private Sub OnGetNumAllKeywordReportsPagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNumAllKeywordReportsPagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNumAllKeywordReportsPagesCompleted(Me, New GetNumAllKeywordReportsPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetAllKeywordImpReports", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetAllKeywordImpReports(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordImpReportStruct()
            Dim results() As Object = Me.Invoke("GetAllKeywordImpReports", New Object() {token, account_id, start_date, end_date})
            Return CType(results(0), KeywordImpReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetAllKeywordImpReports(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllKeywordImpReports", New Object() {token, account_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetAllKeywordImpReports(ByVal asyncResult As System.IAsyncResult) As KeywordImpReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordImpReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetAllKeywordImpReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetAllKeywordImpReportsAsync(token, account_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetAllKeywordImpReportsAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetAllKeywordImpReportsOperationCompleted Is Nothing) Then
                Me.GetAllKeywordImpReportsOperationCompleted = AddressOf Me.OnGetAllKeywordImpReportsOperationCompleted
            End If
            Me.InvokeAsync("GetAllKeywordImpReports", New Object() {token, account_id, start_date, end_date}, Me.GetAllKeywordImpReportsOperationCompleted, userState)
        End Sub

        Private Sub OnGetAllKeywordImpReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllKeywordImpReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllKeywordImpReportsCompleted(Me, New GetAllKeywordImpReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetKeywordReports", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetKeywordReports(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordReportStruct()
            Dim results() As Object = Me.Invoke("GetKeywordReports", New Object() {token, campaign_id, start_date, end_date})
            Return CType(results(0), KeywordReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetKeywordReports(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetKeywordReports", New Object() {token, campaign_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetKeywordReports(ByVal asyncResult As System.IAsyncResult) As KeywordReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetKeywordReportsAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetKeywordReportsAsync(token, campaign_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetKeywordReportsAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetKeywordReportsOperationCompleted Is Nothing) Then
                Me.GetKeywordReportsOperationCompleted = AddressOf Me.OnGetKeywordReportsOperationCompleted
            End If
            Me.InvokeAsync("GetKeywordReports", New Object() {token, campaign_id, start_date, end_date}, Me.GetKeywordReportsOperationCompleted, userState)
        End Sub

        Private Sub OnGetKeywordReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKeywordReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKeywordReportsCompleted(Me, New GetKeywordReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetKeywordConvReports", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetKeywordConvReports(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordConvReportStruct()
            Dim results() As Object = Me.Invoke("GetKeywordConvReports", New Object() {token, campaign_id, start_date, end_date})
            Return CType(results(0), KeywordConvReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetKeywordConvReports(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetKeywordConvReports", New Object() {token, campaign_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetKeywordConvReports(ByVal asyncResult As System.IAsyncResult) As KeywordConvReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordConvReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetKeywordConvReportsAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetKeywordConvReportsAsync(token, campaign_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetKeywordConvReportsAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetKeywordConvReportsOperationCompleted Is Nothing) Then
                Me.GetKeywordConvReportsOperationCompleted = AddressOf Me.OnGetKeywordConvReportsOperationCompleted
            End If
            Me.InvokeAsync("GetKeywordConvReports", New Object() {token, campaign_id, start_date, end_date}, Me.GetKeywordConvReportsOperationCompleted, userState)
        End Sub

        Private Sub OnGetKeywordConvReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKeywordConvReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKeywordConvReportsCompleted(Me, New GetKeywordConvReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetAllKeywordImpReportsByPage", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetAllKeywordImpReportsByPage(ByVal token As String, ByVal account_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date, ByVal page As Integer) As <System.Xml.Serialization.SoapElementAttribute("return")> KeywordImpReportStruct()
            Dim results() As Object = Me.Invoke("GetAllKeywordImpReportsByPage", New Object() {token, account_id, start_date, end_date, page})
            Return CType(results(0), KeywordImpReportStruct())
        End Function

        '''<remarks/>
        Public Function BeginGetAllKeywordImpReportsByPage(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllKeywordImpReportsByPage", New Object() {token, account_id, start_date, end_date, page}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetAllKeywordImpReportsByPage(ByVal asyncResult As System.IAsyncResult) As KeywordImpReportStruct()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), KeywordImpReportStruct())
        End Function

        '''<remarks/>
        Public Overloads Sub GetAllKeywordImpReportsByPageAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer)
            Me.GetAllKeywordImpReportsByPageAsync(token, account_id, start_date, end_date, page, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetAllKeywordImpReportsByPageAsync(ByVal token As String, ByVal account_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal page As Integer, ByVal userState As Object)
            If (Me.GetAllKeywordImpReportsByPageOperationCompleted Is Nothing) Then
                Me.GetAllKeywordImpReportsByPageOperationCompleted = AddressOf Me.OnGetAllKeywordImpReportsByPageOperationCompleted
            End If
            Me.InvokeAsync("GetAllKeywordImpReportsByPage", New Object() {token, account_id, start_date, end_date, page}, Me.GetAllKeywordImpReportsByPageOperationCompleted, userState)
        End Sub

        Private Sub OnGetAllKeywordImpReportsByPageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllKeywordImpReportsByPageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllKeywordImpReportsByPageCompleted(Me, New GetAllKeywordImpReportsByPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetCampaignReport", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetCampaignReport(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignReportStruct
            Dim results() As Object = Me.Invoke("GetCampaignReport", New Object() {token, campaign_id, start_date, end_date})
            Return CType(results(0), CampaignReportStruct)
        End Function

        '''<remarks/>
        Public Function BeginGetCampaignReport(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCampaignReport", New Object() {token, campaign_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetCampaignReport(ByVal asyncResult As System.IAsyncResult) As CampaignReportStruct
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), CampaignReportStruct)
        End Function

        '''<remarks/>
        Public Overloads Sub GetCampaignReportAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetCampaignReportAsync(token, campaign_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetCampaignReportAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetCampaignReportOperationCompleted Is Nothing) Then
                Me.GetCampaignReportOperationCompleted = AddressOf Me.OnGetCampaignReportOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignReport", New Object() {token, campaign_id, start_date, end_date}, Me.GetCampaignReportOperationCompleted, userState)
        End Sub

        Private Sub OnGetCampaignReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignReportCompleted(Me, New GetCampaignReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("/reports/api/GetCampaignConvReport", RequestNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3", ResponseNamespace:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
        Public Function GetCampaignConvReport(ByVal token As String, ByVal campaign_id As Integer, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal start_date As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal end_date As Date) As <System.Xml.Serialization.SoapElementAttribute("return")> CampaignConvReportStruct
            Dim results() As Object = Me.Invoke("GetCampaignConvReport", New Object() {token, campaign_id, start_date, end_date})
            Return CType(results(0), CampaignConvReportStruct)
        End Function

        '''<remarks/>
        Public Function BeginGetCampaignConvReport(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCampaignConvReport", New Object() {token, campaign_id, start_date, end_date}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetCampaignConvReport(ByVal asyncResult As System.IAsyncResult) As CampaignConvReportStruct
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), CampaignConvReportStruct)
        End Function

        '''<remarks/>
        Public Overloads Sub GetCampaignConvReportAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date)
            Me.GetCampaignConvReportAsync(token, campaign_id, start_date, end_date, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetCampaignConvReportAsync(ByVal token As String, ByVal campaign_id As Integer, ByVal start_date As Date, ByVal end_date As Date, ByVal userState As Object)
            If (Me.GetCampaignConvReportOperationCompleted Is Nothing) Then
                Me.GetCampaignConvReportOperationCompleted = AddressOf Me.OnGetCampaignConvReportOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignConvReport", New Object() {token, campaign_id, start_date, end_date}, Me.GetCampaignConvReportOperationCompleted, userState)
        End Sub

        Private Sub OnGetCampaignConvReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignConvReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignConvReportCompleted(Me, New GetCampaignConvReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
    Partial Public Class KeywordConvReportStruct

        Private keywordField As String

        Private match_type_idField As Integer

        Private campaign_idField As Integer

        Private ad_keyword_idField As Integer

        Private ad_keyword_stateField As String

        Private conversionsField As Integer

        Private clicksField As Integer

        Private percent_conversion_rateField As Double

        Private costField As Double

        Private average_cpcField As Double

        Private max_cpcField As Double

        Private cpaField As Double

        Private ad_idField As Integer

        '''<remarks/>
        Public Property keyword() As String
            Get
                Return Me.keywordField
            End Get
            Set(ByVal value As String)
                Me.keywordField = value
            End Set
        End Property

        '''<remarks/>
        Public Property match_type_id() As Integer
            Get
                Return Me.match_type_idField
            End Get
            Set(ByVal value As Integer)
                Me.match_type_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property campaign_id() As Integer
            Get
                Return Me.campaign_idField
            End Get
            Set(ByVal value As Integer)
                Me.campaign_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ad_keyword_id() As Integer
            Get
                Return Me.ad_keyword_idField
            End Get
            Set(ByVal value As Integer)
                Me.ad_keyword_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ad_keyword_state() As String
            Get
                Return Me.ad_keyword_stateField
            End Get
            Set(ByVal value As String)
                Me.ad_keyword_stateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property conversions() As Integer
            Get
                Return Me.conversionsField
            End Get
            Set(ByVal value As Integer)
                Me.conversionsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property clicks() As Integer
            Get
                Return Me.clicksField
            End Get
            Set(ByVal value As Integer)
                Me.clicksField = value
            End Set
        End Property

        '''<remarks/>
        Public Property percent_conversion_rate() As Double
            Get
                Return Me.percent_conversion_rateField
            End Get
            Set(ByVal value As Double)
                Me.percent_conversion_rateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property cost() As Double
            Get
                Return Me.costField
            End Get
            Set(ByVal value As Double)
                Me.costField = value
            End Set
        End Property

        '''<remarks/>
        Public Property average_cpc() As Double
            Get
                Return Me.average_cpcField
            End Get
            Set(ByVal value As Double)
                Me.average_cpcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property max_cpc() As Double
            Get
                Return Me.max_cpcField
            End Get
            Set(ByVal value As Double)
                Me.max_cpcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property cpa() As Double
            Get
                Return Me.cpaField
            End Get
            Set(ByVal value As Double)
                Me.cpaField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ad_id() As Integer
            Get
                Return Me.ad_idField
            End Get
            Set(ByVal value As Integer)
                Me.ad_idField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
    Partial Public Class CampaignReportStruct

        Private campaign_stateField As String

        Private campaign_idField As Integer

        Private clicksField As Integer

        Private costField As Double

        Private budgetField As Double

        Private account_idField As Integer

        Private nameField As String

        Private max_cpcField As Double

        Private reference_numberField As String

        '''<remarks/>
        Public Property campaign_state() As String
            Get
                Return Me.campaign_stateField
            End Get
            Set(ByVal value As String)
                Me.campaign_stateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property campaign_id() As Integer
            Get
                Return Me.campaign_idField
            End Get
            Set(ByVal value As Integer)
                Me.campaign_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property clicks() As Integer
            Get
                Return Me.clicksField
            End Get
            Set(ByVal value As Integer)
                Me.clicksField = value
            End Set
        End Property

        '''<remarks/>
        Public Property cost() As Double
            Get
                Return Me.costField
            End Get
            Set(ByVal value As Double)
                Me.costField = value
            End Set
        End Property

        '''<remarks/>
        Public Property budget() As Double
            Get
                Return Me.budgetField
            End Get
            Set(ByVal value As Double)
                Me.budgetField = value
            End Set
        End Property

        '''<remarks/>
        Public Property account_id() As Integer
            Get
                Return Me.account_idField
            End Get
            Set(ByVal value As Integer)
                Me.account_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property max_cpc() As Double
            Get
                Return Me.max_cpcField
            End Get
            Set(ByVal value As Double)
                Me.max_cpcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property reference_number() As String
            Get
                Return Me.reference_numberField
            End Get
            Set(ByVal value As String)
                Me.reference_numberField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
    Partial Public Class CampaignImpReportStruct

        Private impressionsField As Integer

        Private campaign_stateField As String

        Private campaign_idField As Integer

        Private clicksField As Integer

        Private costField As Double

        Private budgetField As Double

        Private max_cpcField As Double

        Private account_idField As Integer

        Private nameField As String

        Private reference_numberField As String

        Private ctrField As Double

        '''<remarks/>
        Public Property impressions() As Integer
            Get
                Return Me.impressionsField
            End Get
            Set(ByVal value As Integer)
                Me.impressionsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property campaign_state() As String
            Get
                Return Me.campaign_stateField
            End Get
            Set(ByVal value As String)
                Me.campaign_stateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property campaign_id() As Integer
            Get
                Return Me.campaign_idField
            End Get
            Set(ByVal value As Integer)
                Me.campaign_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property clicks() As Integer
            Get
                Return Me.clicksField
            End Get
            Set(ByVal value As Integer)
                Me.clicksField = value
            End Set
        End Property

        '''<remarks/>
        Public Property cost() As Double
            Get
                Return Me.costField
            End Get
            Set(ByVal value As Double)
                Me.costField = value
            End Set
        End Property

        '''<remarks/>
        Public Property budget() As Double
            Get
                Return Me.budgetField
            End Get
            Set(ByVal value As Double)
                Me.budgetField = value
            End Set
        End Property

        '''<remarks/>
        Public Property max_cpc() As Double
            Get
                Return Me.max_cpcField
            End Get
            Set(ByVal value As Double)
                Me.max_cpcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property account_id() As Integer
            Get
                Return Me.account_idField
            End Get
            Set(ByVal value As Integer)
                Me.account_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property reference_number() As String
            Get
                Return Me.reference_numberField
            End Get
            Set(ByVal value As String)
                Me.reference_numberField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ctr() As Double
            Get
                Return Me.ctrField
            End Get
            Set(ByVal value As Double)
                Me.ctrField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
    Partial Public Class CampaignConvReportStruct

        Private campaign_stateField As String

        Private campaign_idField As Integer

        Private conversionsField As Integer

        Private clicksField As Integer

        Private percent_conversion_rateField As Double

        Private costField As Double

        Private budgetField As Double

        Private max_cpcField As Double

        Private account_idField As Integer

        Private cpaField As Double

        Private nameField As String

        Private reference_numberField As String

        '''<remarks/>
        Public Property campaign_state() As String
            Get
                Return Me.campaign_stateField
            End Get
            Set(ByVal value As String)
                Me.campaign_stateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property campaign_id() As Integer
            Get
                Return Me.campaign_idField
            End Get
            Set(ByVal value As Integer)
                Me.campaign_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property conversions() As Integer
            Get
                Return Me.conversionsField
            End Get
            Set(ByVal value As Integer)
                Me.conversionsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property clicks() As Integer
            Get
                Return Me.clicksField
            End Get
            Set(ByVal value As Integer)
                Me.clicksField = value
            End Set
        End Property

        '''<remarks/>
        Public Property percent_conversion_rate() As Double
            Get
                Return Me.percent_conversion_rateField
            End Get
            Set(ByVal value As Double)
                Me.percent_conversion_rateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property cost() As Double
            Get
                Return Me.costField
            End Get
            Set(ByVal value As Double)
                Me.costField = value
            End Set
        End Property

        '''<remarks/>
        Public Property budget() As Double
            Get
                Return Me.budgetField
            End Get
            Set(ByVal value As Double)
                Me.budgetField = value
            End Set
        End Property

        '''<remarks/>
        Public Property max_cpc() As Double
            Get
                Return Me.max_cpcField
            End Get
            Set(ByVal value As Double)
                Me.max_cpcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property account_id() As Integer
            Get
                Return Me.account_idField
            End Get
            Set(ByVal value As Integer)
                Me.account_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property cpa() As Double
            Get
                Return Me.cpaField
            End Get
            Set(ByVal value As Double)
                Me.cpaField = value
            End Set
        End Property

        '''<remarks/>
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        '''<remarks/>
        Public Property reference_number() As String
            Get
                Return Me.reference_numberField
            End Get
            Set(ByVal value As String)
                Me.reference_numberField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
    Partial Public Class KeywordImpReportStruct

        Private keywordField As String

        Private impressionsField As Integer

        Private match_type_idField As Integer

        Private ad_keyword_stateField As String

        Private ad_keyword_idField As Integer

        Private campaign_idField As Integer

        Private clicksField As Integer

        Private costField As Double

        Private average_cpcField As Double

        Private max_cpcField As Double

        Private ad_idField As Integer

        Private ctrField As Double

        '''<remarks/>
        Public Property keyword() As String
            Get
                Return Me.keywordField
            End Get
            Set(ByVal value As String)
                Me.keywordField = value
            End Set
        End Property

        '''<remarks/>
        Public Property impressions() As Integer
            Get
                Return Me.impressionsField
            End Get
            Set(ByVal value As Integer)
                Me.impressionsField = value
            End Set
        End Property

        '''<remarks/>
        Public Property match_type_id() As Integer
            Get
                Return Me.match_type_idField
            End Get
            Set(ByVal value As Integer)
                Me.match_type_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ad_keyword_state() As String
            Get
                Return Me.ad_keyword_stateField
            End Get
            Set(ByVal value As String)
                Me.ad_keyword_stateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ad_keyword_id() As Integer
            Get
                Return Me.ad_keyword_idField
            End Get
            Set(ByVal value As Integer)
                Me.ad_keyword_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property campaign_id() As Integer
            Get
                Return Me.campaign_idField
            End Get
            Set(ByVal value As Integer)
                Me.campaign_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property clicks() As Integer
            Get
                Return Me.clicksField
            End Get
            Set(ByVal value As Integer)
                Me.clicksField = value
            End Set
        End Property

        '''<remarks/>
        Public Property cost() As Double
            Get
                Return Me.costField
            End Get
            Set(ByVal value As Double)
                Me.costField = value
            End Set
        End Property

        '''<remarks/>
        Public Property average_cpc() As Double
            Get
                Return Me.average_cpcField
            End Get
            Set(ByVal value As Double)
                Me.average_cpcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property max_cpc() As Double
            Get
                Return Me.max_cpcField
            End Get
            Set(ByVal value As Double)
                Me.max_cpcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ad_id() As Integer
            Get
                Return Me.ad_idField
            End Get
            Set(ByVal value As Integer)
                Me.ad_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ctr() As Double
            Get
                Return Me.ctrField
            End Get
            Set(ByVal value As Double)
                Me.ctrField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="http://api-sandbox.sponsoredlistings.ask.com/api/v3")> _
    Partial Public Class KeywordReportStruct

        Private match_type_idField As Integer

        Private keywordField As String

        Private campaign_idField As Integer

        Private ad_keyword_idField As Integer

        Private ad_keyword_stateField As String

        Private clicksField As Integer

        Private costField As Double

        Private average_cpcField As Double

        Private max_cpcField As Double

        Private average_positionField As Double

        Private ad_idField As Integer

        Private ctrField As Double

        '''<remarks/>
        Public Property match_type_id() As Integer
            Get
                Return Me.match_type_idField
            End Get
            Set(ByVal value As Integer)
                Me.match_type_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property keyword() As String
            Get
                Return Me.keywordField
            End Get
            Set(ByVal value As String)
                Me.keywordField = value
            End Set
        End Property

        '''<remarks/>
        Public Property campaign_id() As Integer
            Get
                Return Me.campaign_idField
            End Get
            Set(ByVal value As Integer)
                Me.campaign_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ad_keyword_id() As Integer
            Get
                Return Me.ad_keyword_idField
            End Get
            Set(ByVal value As Integer)
                Me.ad_keyword_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ad_keyword_state() As String
            Get
                Return Me.ad_keyword_stateField
            End Get
            Set(ByVal value As String)
                Me.ad_keyword_stateField = value
            End Set
        End Property

        '''<remarks/>
        Public Property clicks() As Integer
            Get
                Return Me.clicksField
            End Get
            Set(ByVal value As Integer)
                Me.clicksField = value
            End Set
        End Property

        '''<remarks/>
        Public Property cost() As Double
            Get
                Return Me.costField
            End Get
            Set(ByVal value As Double)
                Me.costField = value
            End Set
        End Property

        '''<remarks/>
        Public Property average_cpc() As Double
            Get
                Return Me.average_cpcField
            End Get
            Set(ByVal value As Double)
                Me.average_cpcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property max_cpc() As Double
            Get
                Return Me.max_cpcField
            End Get
            Set(ByVal value As Double)
                Me.max_cpcField = value
            End Set
        End Property

        '''<remarks/>
        Public Property average_position() As Double
            Get
                Return Me.average_positionField
            End Get
            Set(ByVal value As Double)
                Me.average_positionField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ad_id() As Integer
            Get
                Return Me.ad_idField
            End Get
            Set(ByVal value As Integer)
                Me.ad_idField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ctr() As Double
            Get
                Return Me.ctrField
            End Get
            Set(ByVal value As Double)
                Me.ctrField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetKeywordConvReportsByPageCompletedEventHandler(ByVal sender As Object, ByVal e As GetKeywordConvReportsByPageCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetKeywordConvReportsByPageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordConvReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordConvReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetKeywordReportsByPageCompletedEventHandler(ByVal sender As Object, ByVal e As GetKeywordReportsByPageCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetKeywordReportsByPageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetKeywordImpReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetKeywordImpReportCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetKeywordImpReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordImpReportStruct
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordImpReportStruct)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetAllCampaignConvReportsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllCampaignConvReportsCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetAllCampaignConvReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As CampaignConvReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), CampaignConvReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetNumAllKeywordImpReportsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetNumAllKeywordImpReportsPagesCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetNumAllKeywordImpReportsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetKeywordImpReportsCompletedEventHandler(ByVal sender As Object, ByVal e As GetKeywordImpReportsCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetKeywordImpReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordImpReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordImpReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetNumKeywordReportsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetNumKeywordReportsPagesCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetNumKeywordReportsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetNumKeywordConvReportsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetNumKeywordConvReportsPagesCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetNumKeywordConvReportsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetCampaignImpReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignImpReportCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetCampaignImpReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As CampaignImpReportStruct
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), CampaignImpReportStruct)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetKeywordReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetKeywordReportCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetKeywordReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordReportStruct
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordReportStruct)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetAllKeywordConvReportsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllKeywordConvReportsCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetAllKeywordConvReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordConvReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordConvReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetAllKeywordReportsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllKeywordReportsCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetAllKeywordReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetKeywordImpReportsByPageCompletedEventHandler(ByVal sender As Object, ByVal e As GetKeywordImpReportsByPageCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetKeywordImpReportsByPageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordImpReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordImpReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetAllCampaignImpReportsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllCampaignImpReportsCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetAllCampaignImpReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As CampaignImpReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), CampaignImpReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetNumKeywordImpReportsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetNumKeywordImpReportsPagesCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetNumKeywordImpReportsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetAllKeywordReportsByPageCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllKeywordReportsByPageCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetAllKeywordReportsByPageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetAllKeywordConvReportsByPageCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllKeywordConvReportsByPageCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetAllKeywordConvReportsByPageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordConvReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordConvReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetKeywordConvReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetKeywordConvReportCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetKeywordConvReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordConvReportStruct
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordConvReportStruct)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetAllCampaignReportsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllCampaignReportsCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetAllCampaignReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As CampaignReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), CampaignReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetNumAllKeywordConvReportsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetNumAllKeywordConvReportsPagesCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetNumAllKeywordConvReportsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetNumAllKeywordReportsPagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetNumAllKeywordReportsPagesCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetNumAllKeywordReportsPagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetAllKeywordImpReportsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllKeywordImpReportsCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetAllKeywordImpReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordImpReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordImpReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetKeywordReportsCompletedEventHandler(ByVal sender As Object, ByVal e As GetKeywordReportsCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetKeywordReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetKeywordConvReportsCompletedEventHandler(ByVal sender As Object, ByVal e As GetKeywordConvReportsCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetKeywordConvReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordConvReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordConvReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetAllKeywordImpReportsByPageCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllKeywordImpReportsByPageCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetAllKeywordImpReportsByPageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As KeywordImpReportStruct()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), KeywordImpReportStruct())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetCampaignReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignReportCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetCampaignReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As CampaignReportStruct
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), CampaignReportStruct)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")> _
    Public Delegate Sub GetCampaignConvReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignConvReportCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetCampaignConvReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As CampaignConvReportStruct
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), CampaignConvReportStruct)
            End Get
        End Property
    End Class
End Namespace